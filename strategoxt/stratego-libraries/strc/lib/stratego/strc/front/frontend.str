/**
 * An xtc-less implementation of the compiler front-end.
 */

module frontend

imports
  stratego/strc/strc/format-check

strategies

  frontend = 
    m-transform-no-overlays(id

      // add some definitions and constructors

      ; if-not-lib(m-add-main)
      ; m-add-anno-cong-def
      ; where(dr-constructors; map(m-add-constructor))
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(4)"]))

      // desugar and check constructors

      ; m-transform-constructors(id
          ; pre-desugar
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(4.1)"]))
          ; try(DeclareVarToConst)
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(4.2)"]))
	      ; try((TupleDecl <+ QuotedConstrDecl); pre-desugar)
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(4.3)"]))
          ; (GenerateCheckRule <+ dbg(|"GenerateCheckRule fails: "))
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(4.4)"]))
          ; try(where(m-MkCongDef; m-add-def))
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(5)"]))

      // desugar and check overlays

      ; m-transform-overlays(id
          ; pre-desugar
          ; check-overlay
          ; try(DeclareVarToConst)
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(6)"]))

      ; m-transform-overlays(id
          ; m-variables-to-constructors-in-def
          ; pre-desugar
          ; not(def-use-def)
          ; not(check-where-with)
          ; raise-annotations
          ; GenerateCheckRule
          ; DeclareExpandOverlay
          ; where(Overlay-to-Congdef; m-add-def)
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(7)"]))

      ; m-transform-overlays(
          not(check-constructors)
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(8)"]))

      // plug in dump of asts
      ; if <get-config> "--dump-aterms" then 
          where(
            <debug> "Going to write to file"
            ; if <get-config> "-i" then
                fp := <fopen <+ debug(!"Could not open file")> (<concat-strings> [<get-config> "-i", ".aterm"], "w")
              else
                fp := <fopen <+ debug(!"Could not open file")> ("dump.aterm", "w")
              end
            ; <fprint <+ debug(!"Could not write to file")> (fp, [<bagof-StrAsts>])
            ; <fclose> fp
          )
        end
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(9)"]))

      // transform and check local definitions

      ; m-transform-local-defs(map(id
          ; m-repair-types
          ; pre-desugar		
          ; raise-annotations
        ))
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(10)"]))

      ; m-lift-dynamic-rules-from-spec
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(11)"]))

      ; check-calls
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(12)"]))

      ; m-transform-local-defs(
          map(id
            ; stratego-desugar
            ; raise-annotations
	        ; not(def-use-def)
            ; not(check-constructors)
            ; expand-overlays-in-def
            ; rules-to-sdefs-def
            ; desugar-list-matching
	        ; desugar-DefaultVarDec
            ; strename
            ; desugar-def
            ; check-patterns
          )
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(13)"]))

      ; m-transform-local-defs(id
          ; ![<joindefs>] 
          ; [RenameSDef]
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(14)"]))

      ; m-transform-external-defs(id
          ; if ?[_,_|_] then
              warn(|"multiple external definitions with same signature")
	        ; [rules(SameSigExtDef :+= <id>) | ![]]
            end
          ; [RenameSDef
             ; desugar-DefaultVarDec
             ; strename
            ]
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(15)"]))

      ; m-transform-local-defs(
          [rename-calls
           ; simplify
	       ; define-congruences-def
          ]
        )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(16)"]))
              
      ; if-lib(remove-unused-external-defs, remove-unused-defs)
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(17)"]))
    )
  ; where(not(oncetd(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_))) <+ (oncetd(where({?c;(?CallT(_,_,_) + ?Call(_,_) + ?CallNoArgs(_)); prim("SSL_EXT_origin_location_offset", c); dbg(|[c])})) < !"some origins found" + !"no origins found");dbg(|["frontend(18)"]))
    ; tfc1(|"Stratego-Core", "fe-cong")

strategies

  check-patterns =
    where(
      collect(check-match <+ check-build)
      ; []
    )

  check-match =
    Match(oncetd(fail
      <+ ?BuildDefault(_) 
      <+ ?BuildDefaultPT(_)
      <+ ?_{"quoted"}
    ))
    ; err(|"build symbols in match pattern")
  
  check-build =
    Build(oncetd(fail
      <+ ?Wld() 
      <+ ?As(_,_)
      <+ ?BuildDefault(_) 
      <+ ?BuildDefaultPT(_)
    ))
    ; err(|"match symbols in build pattern")

  check-where-with =
    sometd({ x:
      ( SetDynRule(?x, not(only-uses-where))
      + AddDynRule(?x, not(only-uses-where))
      )
      ; err(|<conc-strings> ("dynamic rule may only use 'where' conditions in rule ", x))
    })

  only-uses-where =
    [] + [WhereClause(id)] + not(is-list)

  check-overlay =
    if oncetd(fail <+ ?Wld() <+ ?As(_,_)) then
      err(|"match symbols in overlay pattern"); fail
    end
  
